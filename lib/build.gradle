/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'com.github.gregwhitaker.gitignore' version '2.2.0'
    id 'signing'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(8))
    }
}

group = 'io.github.Lindelt'
version = '1.0.0'

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'java-either'
            pom {
                name = 'java-either'
                description = 'A generalized binary summation type for Java8+'
                url = 'http://github.com/Lintelt/java-either'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'Lindelt'
                        name = 'Andrew Bilsborough'
                        email = 'ajbilsborough@gmail.com'
                        url = 'https://github.com/Lindelt'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Lindelt/java-either.git'
                    developerConnection = 'scm:git:ssh://github.com/Lindelt/java-either.git'
                    url = "http://github.com/Lindelt/java-either"
                }
            }
            from components.java
        }
    }

    repositories {
        // Send to a local repository for now, will point to remote later
        maven {
            name = 'testRepo'
            url = layout.buildDirectory.dir('repo')
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
